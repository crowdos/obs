#!/bin/sh

BUILD=
case "$BUILD_ARCH" in
    *armv7*)
	BUILD=arm
	;;
    *86*)
	BUILD=x86
	;;
    *)
	echo "Unknown build architecture"
	exit 1
	;;
esac

if [ "$BUILD" = "arm" ]; then
    ARG=""
    for i in addr2line gcc-nm ar gcc-nm-4.9 as gcc-ranlib c++ gcc-ranlib-4.9 c++filt \
	gcov-4.9 c89 gprof c99 ld cc ld.bfd cpp-4.9 ld.gold dwp nm elfedit objcopy g++ \
	objdump g++-4.9 ranlib gcc readelf gcc-4.9 size gcc-ar strings gcc-ar-4.9 strip; do \
	ARG="$ARG -b /usr/bin/arm-linux-gnueabihf-$i:/usr/bin/$i"; \
    done

    ARG="$ARG -b /usr/lib/gcc/arm-linux-gnueabihf/ -b /usr/bin/make -b /usr/bin/dpkg-buildpackage"

    # Those are also needed. The only example I have is building mlite fails
    # due too many symbolic links if we do not have cp but let's add mv and ln
    for i in ls cp mv ln; do \
        ARG="$ARG -b /bin/$i"; done

    if [ "$2" = "dpkg" ] || [ "$2" = "/sbin/ldconfig" ]; then
	# Do not bind while we are installing. We can trash our rootfs
	ARG=""
    fi

    exec proot $ARG \
	 -b /tmp:/tmp \
	 -q qemu-arm-static -r "$@"
fi

if [ "$BUILD" = "x86" ]; then
    exec /usr/sbin/chroot "$@"
fi
